[{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to massSight","title":"Contributing to massSight","text":"outlines propose change massSight. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to massSight","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to massSight","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to massSight","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"omicsEye/massSight\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to massSight","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to massSight","text":"Please note massSight project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://omicseye.github.io/massSight/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 massSight authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://omicseye.github.io/massSight/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chiraag Gohel. Author, maintainer. Ali Rahnavard. Author.","code":""},{"path":"https://omicseye.github.io/massSight/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gohel C, Rahnavard (2023). massSight: Batch Alignment Scaling LC-MS Data. https://github.com/omicsEye/massSight, https://omicseye.github.io/massSight/.","code":"@Manual{,   title = {massSight: Batch Alignment and Scaling for LC-MS Data},   author = {Chiraag Gohel and Ali Rahnavard},   year = {2023},   note = {https://github.com/omicsEye/massSight, https://omicseye.github.io/massSight/}, }"},{"path":"https://omicseye.github.io/massSight/index.html","id":"masssight","dir":"","previous_headings":"","what":"Batch Alignment and Scaling for LC-MS Data","title":"Batch Alignment and Scaling for LC-MS Data","text":"massSight R package alignment scaling LC-MS metabolomics data. Citation: use massSight, please cite manuscript: Chiraag Gohel Ali Rahnavard. (2023). massSight: Metabolomics meta-analysis multi-study data scaling, integration, harmonization. https://github.com/omicsEye/massSight","code":""},{"path":"https://omicseye.github.io/massSight/index.html","id":"contents","dir":"","previous_headings":"","what":"Contents","title":"Batch Alignment and Scaling for LC-MS Data","text":"Description Requirements Input Files Run Demo Visualization Example real world applications Dev Instructions","code":""},{"path":[]},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Batch Alignment and Scaling for LC-MS Data","text":"","code":"devtools::install_github(\"omicsEye/massSight\")"},{"path":"https://omicseye.github.io/massSight/index.html","id":"usagetesting","dir":"","previous_headings":"Installation","what":"Usage/Testing","title":"Batch Alignment and Scaling for LC-MS Data","text":"Alignment performed using auto_align()","code":"library(massSight)  # example 1 inputs (small input for test) View (df1_small) View(df2_small) aligned_df <- auto_align(df1_small, df2_small)   # example 2 inputs (small input for test) aligned_df <- auto_align(df1, df2)"},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"run","dir":"","previous_headings":"","what":"Run","title":"Batch Alignment and Scaling for LC-MS Data","text":"now, manually add tsv/csv file load data object global environment using read_csv read_table. run auto_align created data objects.","code":"# read inputs as data frame in R user_df1 <- read.delim(   \"/path-to-file/profile1.tsv\",   sep = '\\t',   header = T,   fill = F,   comment.char = \"\" ,   check.names = F,   row.names = 1 )  user_df1 <- read.delim(   \"/path-to-file/profile2.tsv\",   sep = '\\t',   header = T,   fill = F,   comment.char = \"\" ,   check.names = F,   row.names = 1 )  # run alignment function to combine two datasets aligned_df <- auto_align(user_df1, user_df2)"},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"visualization","dir":"","previous_headings":"","what":"Visualization","title":"Batch Alignment and Scaling for LC-MS Data","text":"","code":"massSight::final_plotsfinal_plots(   aligned_df$results_df_complete,   aligned_df$smooth_for_plot,   aligned_df$adjusted_df )"},{"path":[]},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"installation-1","dir":"","previous_headings":"Dev Instructions","what":"Installation","title":"Batch Alignment and Scaling for LC-MS Data","text":"Clone/pull massSight Open R project massSight.Rproj Build package using devtools::build() Install package using devtools::install()","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto Align — auto_align","title":"Auto Align — auto_align","text":"function automatically align data based smoothing method choose.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto Align — auto_align","text":"","code":"auto_align(   df1,   df2,   rt_lower = -0.5,   rt_upper = 0.5,   mz_lower = -15,   mz_upper = 15,   rt_smooth = 0.2,   mz_smooth = 0.2,   minimum_intensity = 1000,   rt_iso_threshold = 0.5,   mz_iso_threshold = 15,   smooth_method = \"lowess\",   multipliers = c(6, 6, 6),   weights = c(1, 1, 1),   keep_features = c(F, F) )"},{"path":"https://omicseye.github.io/massSight/reference/auto_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto Align — auto_align","text":"df1 data frame representing results preprocessed LC-MS experiment. df2 data frame representing results second preprocessed LC-MS experiment. rt_lower numeric indicating lower bound RT range considered alignment. rt_upper numeric indicating upper bound RT range considered alignment. mz_lower numeric indicating lower bound m/z range considered alignment. mz_upper numeric indicating upper bound m/z range considered alignment. rt_smooth numeric indicating smoothing parameter RT. mz_smooth numeric indicating smoothing parameter m/z. minimum_intensity numeric indicating minimum intensity considered alignment. rt_iso_threshold numeric indicating simplification parameter RT. mz_iso_threshold numeric indicating simplification parameter m/z. smooth_method character indicating smoothing method used. Options \"lowess\", \"spline\", \"gaussian\". multipliers numeric vector indicating multipliers used alignment. weights numeric vector indicating weights used alignment. keep_features logical vector indicating whether keep features matched.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto Align — auto_align","text":"data frame containing aligned data.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto Scale — auto_scale","title":"Auto Scale — auto_scale","text":"function automatically scale data based normalization method choose. also calculate CVs sample metabolite.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto Scale — auto_scale","text":"","code":"auto_scale(   is_to_use,   pref_to_use,   prefs_to_remove,   normalization,   data,   sample_information,   pool_missing_p,   fill_method,   smooth_method = \"lowess\" )"},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto Scale — auto_scale","text":"is_to_use vector internal standards use normalization. want use internal standards, leave blank. pref_to_use string preferred reference use normalization. want use preferred reference, leave blank. prefs_to_remove vector preferred references remove data. want remove preferred references, leave blank. normalization string normalization method use. can \"\", \"NN\", \"SMOOTH\". data data frame data normalized. output read_data function. sample_information data frame sample information. output read_sample_information function. pool_missing_p boolean indicating whether pool missing values. TRUE, missing values pooled. FALSE, missing values filled half-minimum. fill_method string indicating fill missing values. can \"half-min\" \"mean\". \"half-min\", missing values filled half-minimum. \"mean\", missing values filled mean. smooth_method string indicating smoothing method use. can \"lowess\" \"loess\". \"lowess\", local polynomial regression used. \"loess\", local polynomial regression used.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto Scale — auto_scale","text":"data frame normalized data.","code":""},{"path":"https://omicseye.github.io/massSight/reference/cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster — cluster","title":"Cluster — cluster","text":"function cluster data based clustering method choose.","code":""},{"path":"https://omicseye.github.io/massSight/reference/cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster — cluster","text":"","code":"cluster()"},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Data — load_data","title":"Load Data — load_data","text":"function load LC-MS data file.","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Data — load_data","text":"","code":"load_data(input, type = \"known\", sheet = 1, id = \"Metabolite\")"},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Data — load_data","text":"input string file path data frame data loaded. type string indicating type data loaded. can \"known\" \"unknown\". sheet string integer indicating sheet number excel file loaded. id string indicating column name compound ID.","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Data — load_data","text":"list sample metadata, feature metadata, data matrix.","code":""}]

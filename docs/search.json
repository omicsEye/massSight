[{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to massSight","title":"Contributing to massSight","text":"outlines propose change massSight. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to massSight","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to massSight","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to massSight","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"omicsEye/massSight\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to massSight","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://omicseye.github.io/massSight/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to massSight","text":"Please note massSight project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://omicseye.github.io/massSight/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 massSight authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Alignment Tutorial using iHMP Data","text":"tutorial, analyzing two datasets NIH human microbiome project processed using different techniques. provide function (load_ihmp_data()) automatically creates data directory, downloads datasets . datasets can also downloaded manually. first dataset can downloaded . second dataset can downloaded . First, massSight can installed via devtools: , can load necessary libraries can download iHMP datasets.","code":"install.packages(\"devtools\")  devtools::install_github(\"omicsEye/massSight\") library(massSight) library(ggplot2) load_ihmp_data()"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"loading-ihmp-data","dir":"Articles","previous_headings":"","what":"Loading iHMP data","title":"Alignment Tutorial using iHMP Data","text":"can use load_data() function import LC-MS data excel format variety standard pre-processed formats. can use filter_intensities() function perform quality control remove metabolites low prevalence.","code":"loaded_data <-   massSight::load_data(     input = \"data/progenesis_ihmp.xlsx\",     type = \"all\",     sheet = 1,     id = \"Compound_ID\"   )  loaded_data$feature_metadata$MZ <-   as.numeric(loaded_data$feature_metadata$MZ) loaded_data$feature_metadata$RT <-   as.numeric(loaded_data$feature_metadata$RT) feature_metadata2 <-   loaded_data$feature_metadata[colnames(loaded_data$data), ] loaded_data$data <- loaded_data$data |>   t() |>   data.frame() hmp2_keep <-   filter_intensities(data = loaded_data$data, prevalence = .5) loaded_data$data <- loaded_data$data[hmp2_keep, ] feature_metadata2 <- feature_metadata2[hmp2_keep, ] feature_metadata2$Intensity <- rowMeans(loaded_data$data, na.rm = T) ref_input <-   feature_metadata2[(!is.na(feature_metadata2$MZ)) &     (!is.na(feature_metadata2$RT)), ]"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"create-a-masssight-object-for-the-first-dataset","dir":"Articles","previous_headings":"Loading iHMP data","what":"Create a massSight object for the first dataset","title":"Alignment Tutorial using iHMP Data","text":"now everything need create massSight object (MSObject). object serves container contains raw data, analyzed data, information regarding experiment. information MSObject, check documentation. can use raw_df() function access stored data created object. Let’s see looks like! process second dataset similarly. check column names see variable names used converting dataframe massSight object. dataset, sample intensity values begin column 7 end dataframe. load_data() function used omicsArt::numeric_dataframe() ensure converted dataframe columns numeric read dataframe columns various data types measure mean rows intensities need convert numeric. can create object C18_CD includes FFA metabolites processed Compound Discovery version","code":"hmp2_ms <- create_ms_obj(   df = ref_input,   name = \"iHMP\",   id_name = \"Compound_ID\",   rt_name = \"RT\",   mz_name = \"MZ\",   int_name = \"Intensity\",   metab_name = \"Metabolite\" ) hmp2_ms |>   raw_df() |>   head() |>   knitr::kable() C18_CD <- read.delim(   \"data/cd_c18n_ihmp.csv\",   sep = \",\",   header = TRUE,   fill = FALSE,   comment.char = \"\",   check.names = FALSE   # row.names = 1 ) colnames(C18_CD) |> head(10) #>  [1] \"Name\"                                       #>  [2] \"Annot. Source: MassList Search\"             #>  [3] \"Calc. MW\"                                   #>  [4] \"m/z\"                                        #>  [5] \"RT [min]\"                                   #>  [6] \"Area (Max.)\"                                #>  [7] \"Area: 0000h_XAV_iHMP2_FFA_PREFA01.raw (F1)\" #>  [8] \"Area: 0000i_XAV_iHMP2_FFA_PREFB01.raw (F2)\" #>  [9] \"Area: 0001_XAV_iHMP2_FFA_SM-6JWO4.raw (F3)\" #> [10] \"Area: 0002_XAV_iHMP2_FFA_SM-7CRWL.raw (F4)\" c18_keep <- filter_intensities(   data = C18_CD[, 7:ncol(C18_CD)],   prevalence = .5 ) C18_CD <- C18_CD[c18_keep, ] C18_CD$Intensity <-   rowMeans(C18_CD[, 7:dim(C18_CD)[2]],     na.rm = T   ) C18_CD$row_id <- rownames(C18_CD) ms_C18_CD <-   create_ms_obj(     df = C18_CD,     name = \"C18_CD\",     id_name = \"row_id\",     rt_name = \"RT [min]\",     mz_name = \"m/z\",     int_name = \"Intensity\",     metab_name = \"Name\"   )"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"quick-qc-check","dir":"Articles","previous_headings":"","what":"Quick QC Check","title":"Alignment Tutorial using iHMP Data","text":"can visualize distributions retention time mass charge ratio using distribution_plot()","code":"distribution_plot(hmp2_ms) distribution_plot(ms_C18_CD)"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"combining-datasets","dir":"Articles","previous_headings":"","what":"Combining Datasets","title":"Alignment Tutorial using iHMP Data","text":"auto_combine() function allows users combine two datasets via modeling RT m/z drift two experiments. information function, check documentation!","code":"aligned <- auto_combine(   ms1 = hmp2_ms,   ms2 = ms_C18_CD,   smooth_method = \"gam\",   log = NULL )"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Alignment Tutorial using iHMP Data","text":"Visualization alignment can performed via final_plots() function.  recommend use ggsave() package ggplot2 saving publication quality figures.","code":"final_plots(aligned) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> Warning: Removed 2222 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Removed 2222 rows containing missing values or values outside the scale range #> (`geom_point()`). ggsave(   filename = \"plots/final_smooth_ref_all.png\",   plot = final_smooth,   width = 7.2,   height = 3.5,   units = \"in\",   dpi = 300 )"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"using-only-c18-neg-as-a-reference","dir":"Articles","previous_headings":"","what":"Using only C18-neg as a reference","title":"Alignment Tutorial using iHMP Data","text":"","code":"ref_input_C18 <- ref_input[ref_input$Method == \"C18-neg\", ] ref_C18 <- create_ms_obj(   df = ref_input_C18,   name = \"iHMP_C18\",   id_name = \"Compound_ID\",   rt_name = \"RT\",   mz_name = \"MZ\",   int_name = \"Intensity\",   metab_name = \"Metabolite\" )"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"run-auto_combine-with-dbscan","dir":"Articles","previous_headings":"","what":"Run auto_combine with dbscan","title":"Alignment Tutorial using iHMP Data","text":"","code":"aligned_c18 <- auto_combine(   ms1 = ref_C18,   ms2 = ms_C18_CD,   smooth_method = \"gam\",   log = NULL )"},{"path":"https://omicseye.github.io/massSight/articles/iHMP_software_comp.html","id":"visualization-1","dir":"Articles","previous_headings":"","what":"Visualization","title":"Alignment Tutorial using iHMP Data","text":"","code":"final_plots(aligned_c18) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> Warning: Removed 49 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Removed 49 rows containing missing values or values outside the scale range #> (`geom_point()`). ggsave(   filename = \"plots/final_smooth_ref_C18.png\",   width = 7.2,   height = 3.5,   units = \"in\",   dpi = 300 )"},{"path":"https://omicseye.github.io/massSight/articles/massSight_iHMP_PRISM.html","id":"read-data","dir":"Articles","previous_headings":"","what":"read data","title":"massSight combine iHMP and PRISM metabolites (IBD studies)","text":"iHMP publication: https://doi.org/10.1038/s41586-019-1237-9 Data : https://www.metabolomicsworkbench.org/data/DRCCStudySummary.php?Mode=SetupRawDataDownload&StudyID=ST000923 https://ibdmdb.org/tunnel/public/summary.html consolidated data two sources created single excel file method (HILIC-pos, HILIC-neg, C18-neg, C8-pos), can downloaded following link: https://gwu.box.com/s/i8fxlre70b0sbrdhp9sjjfautlmlwd6x PRISM pubcliation: https://doi.org/10.1038/s41564-018-0306-4 Data : https://www.metabolomicsworkbench.org/data/DRCCStudySummary.php?Mode=SetupRawDataDownload&StudyID=ST001000 PRISM data can downloaded following link: https://gwu.box.com/s/033vt0ieh3gucaw5f9as3fuvna7h1b4t","code":""},{"path":"https://omicseye.github.io/massSight/articles/massSight_iHMP_PRISM.html","id":"load-ihmp-data","dir":"Articles","previous_headings":"read data","what":"Load iHMP data","title":"massSight combine iHMP and PRISM metabolites (IBD studies)","text":"","code":"loaded_data <-   massSight::load_data(     input = \"path/to/your/iHMP_data.xlsx\",     type = \"all\",     sheet = 1,     id = \"Compound_ID\"   ) loaded_data$feature_metadata$MZ <-   as.numeric(loaded_data$feature_metadata$MZ) loaded_data$feature_metadata$RT <-   as.numeric(loaded_data$feature_metadata$RT) feature_metadata2 <-   loaded_data$feature_metadata[colnames(loaded_data$data), ] feature_metadata2$Intensity <- colMeans(loaded_data$data, na.rm = T) feature_metadata <- cbind(feature_metadata2, t(loaded_data$data)) ref_input <-   feature_metadata2[!is.na(feature_metadata2$MZ) &     !is.na(feature_metadata2$RT), ]"},{"path":"https://omicseye.github.io/massSight/articles/massSight_iHMP_PRISM.html","id":"load-prism-clustered-data-as-main-output","dir":"Articles","previous_headings":"read data","what":"load PRISM clustered data as main output","title":"massSight combine iHMP and PRISM metabolites (IBD studies)","text":"","code":"PRISM <-   massSight::load_data(     input = \"path/to/your/PRISM_data.xlsx\",     type = \"all\",     sheet = 1,     id = \"Compound_ID\"   ) PRISM$feature_metadata$MZ <-   as.numeric(PRISM$feature_metadata$MZ) PRISM$feature_metadata$RT <-   as.numeric(PRISM$feature_metadata$RT) feature_metadata2 <-   PRISM$feature_metadata[colnames(PRISM$data), ] feature_metadata2$Intensity <- colMeans(PRISM$data, na.rm = T) feature_metadata <- cbind(feature_metadata2, t(PRISM$data)) PRISM_input <-   feature_metadata2[!is.na(feature_metadata2$MZ) &     !is.na(feature_metadata2$RT), ] PRISM_Methods <- sapply(str_split(PRISM_input$Compound_ID, \"_\"), \"[[\", 1) PRISM_input$Method <- PRISM_Methods"},{"path":[]},{"path":"https://omicseye.github.io/massSight/articles/massSight_iHMP_PRISM.html","id":"create-an-object-for-ihmp-data-as-reference-for-alignment-and-combining","dir":"Articles","previous_headings":"Approach 1: iHMP vs. PRISM method by method","what":"Create an object for iHMP data as reference for alignment and combining","title":"massSight combine iHMP and PRISM metabolites (IBD studies)","text":"plots can saved locally well.","code":"aligned_df <- vector(mode = \"list\", length = 4) profiling_methods <- c(\"HILIC-neg\", \"HILIC-pos\", \"C18-neg\", \"C8-pos\") names(aligned_df) <- profiling_methods ref <- query <- final_smooth <- aligned_df for (profiling_method in profiling_methods) {   ref[[profiling_method]] <-     create_ms_obj(       df = ref_input[ref_input$Method == profiling_method, ],       name = \"iHMP\",       id_name = \"Compound_ID\",       rt_name = \"RT\",       mz_name = \"MZ\",       int_name = \"Intensity\"     )    query[[profiling_method]] <-     create_ms_obj(       df = PRISM_input[PRISM_input$Method == profiling_method, ],       name = \"PRISM\",       id_name = \"Compound_ID\",       rt_name = \"RT\",       mz_name = \"MZ\",       int_name = \"Intensity\"     )    # create and save distribution of MZ and RT of features   ms1_distr <- massSight::distribution_plot(query[[profiling_method]])   ms2_distr <- massSight::distribution_plot(ref[[profiling_method]])   print(ms1_distr)   print(ms2_distr) } ggsave(     filename = paste0(\"analysis/iHMP_PRISM/PRISM_\", profiling_method, \"_query_distr_plot.png\"),     plot = ms1_distr,     width = 5,     height = 5,     units = \"in\",     dpi = 300,     create.dir = TRUE   )   ggsave(     filename = paste0(\"analysis/iHMP_PRISM/iHMP_\", profiling_method, \"_ref_distr_plot.png\"),     plot = ms2_distr,     width = 5,     height = 5,     units = \"in\",     dpi = 300,     create.dir = TRUE   ) } for (profiling_method in profiling_methods) {   print(profiling_method)   aligned_df[[profiling_method]] <-     auto_combine(ref[[profiling_method]], query[[profiling_method]], smooth_method = \"gam\", log = NULL) }"},{"path":"https://omicseye.github.io/massSight/articles/massSight_iHMP_PRISM.html","id":"view-and-write","dir":"Articles","previous_headings":"","what":"View and write","title":"massSight combine iHMP and PRISM metabolites (IBD studies)","text":"","code":"for (profiling_method in profiling_methods) {   write.table(aligned_df[[profiling_method]]@all_matched, file = paste0(\"analysis/iHMP_PRISM/iHMP_PRISM_\", profiling_method, \"_excel.tsv\"), quote = FALSE, sep = \"\\t\", row.names = FALSE) }"},{"path":"https://omicseye.github.io/massSight/articles/massSight_iHMP_PRISM.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"massSight combine iHMP and PRISM metabolites (IBD studies)","text":"","code":"for (profiling_method in profiling_methods) {   final_smooth[[profiling_method]] <- final_plots(aligned_df[[profiling_method]])   print(final_smooth[[profiling_method]])   ggsave(     filename = paste0(\"analysis/iHMP_PRISM/iHMP_vs_all_PRISM_excel_\", profiling_method, \"_massSight_plots.png\"),     plot = final_smooth[[profiling_method]],     width = 5,     height = 5,     units = \"in\",     dpi = 300,     create.dir = TRUE   ) } for (profiling_method in profiling_methods) {   write.table(aligned_df[[profiling_method]]@all_matched,     file = paste0(\"analysis/iHMP_PRISM/iHMP_PRISM_\", profiling_method, \"_excel.tsv\"),     quote = FALSE, sep = \"\\t\", row.names = FALSE   ) }"},{"path":"https://omicseye.github.io/massSight/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chiraag Gohel. Author, maintainer. Bahar Sayoldin. Author. Ali Rahnavard. Author.","code":""},{"path":"https://omicseye.github.io/massSight/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gohel C, Sayoldin B, Rahnavard (2024). massSight: Batch Alignment Scaling LC-MS Data. R package version 0.2.3, https://omicseye.github.io/massSight/, https://github.com/omicsEye/massSight.","code":"@Manual{,   title = {massSight: Batch Alignment and Scaling for LC-MS Data},   author = {Chiraag Gohel and Bahar Sayoldin and Ali Rahnavard},   year = {2024},   note = {R package version 0.2.3,     https://omicseye.github.io/massSight/},   url = {https://github.com/omicsEye/massSight}, }"},{"path":"https://omicseye.github.io/massSight/index.html","id":"masssight","dir":"","previous_headings":"","what":"Batch Alignment and Scaling for LC-MS Data","title":"Batch Alignment and Scaling for LC-MS Data","text":"Examples Description Installation massSight Object auto_combine() ml_match() Plotting results alignment Using massSight annotate unknown metabolites Installation   massSight R package combining scaling LC-MS metabolomics data. Citation: use massSight, please cite manuscript: Chiraag Gohel Ali Rahnavard. (2023). massSight: Metabolomics meta-analysis multi-study data scaling, integration, harmonization. https://github.com/omicsEye/massSight","code":""},{"path":"https://omicseye.github.io/massSight/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Batch Alignment and Scaling for LC-MS Data","text":"Examples extensive documentation can found ","code":""},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Batch Alignment and Scaling for LC-MS Data","text":"First, don’t installed, install devtools using: , R console, run: can load library using:","code":"install.packages(\"devtools\") devtools::install_github(\"omicsEye/massSight\") library(massSight)"},{"path":"https://omicseye.github.io/massSight/index.html","id":"data-preparation","dir":"","previous_headings":"","what":"Data Preparation","title":"Batch Alignment and Scaling for LC-MS Data","text":"massSight works output LC-MS experiments, contain columns corresponding : Compound ID Retention Time Mass Charge Ratio (Optional) Average Intensity across samples (Optional) Metabolite Name","code":""},{"path":"https://omicseye.github.io/massSight/index.html","id":"the-masssight-object","dir":"","previous_headings":"Data Preparation","what":"The massSight Object","title":"Batch Alignment and Scaling for LC-MS Data","text":"massSight creates uses MSObject class store data results pertaining individual LC-MS experiments. Prior alignment, LC-MS data frames tibbles converted MSObject using create_ms_obj: MSObject provides following functions: raw_df() access experiment’s raw LC-MS data isolated() access experiment’s isolated metabolites, important downstream alignment tasks scaled_df() access experiment’s scaled LC-MS data consolidated() access experiment’s consolidated data metadata() access experiment’s metadata","code":"data(hp1) data(hp2)  ms1 <-   create_ms_obj(     df = hp1,     name = \"hp1\",     id_name = \"Compound_ID\",     rt_name = \"RT\",     mz_name = \"MZ\",     int_name = \"Intensity\"   )  ms2 <-   create_ms_obj(     df = hp2,     name = \"hp2\",     id_name = \"Compound_ID\",     rt_name = \"RT\",     mz_name = \"MZ\",     int_name = \"Intensity\"   ) ms2 |>   raw_df() |>   head() |>   knitr::kable(format = \"simple\")"},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"auto_combine","dir":"","previous_headings":"Alignment","what":"auto_combine()","title":"Batch Alignment and Scaling for LC-MS Data","text":"Alignment performed using auto_combine() information auto_combine() function can found package documentation","code":"aligned <- auto_combine(   ms1,   ms2,   rt_lower = -.5,   rt_upper = .5,   mz_lower = -15,   mz_upper = 15,   smooth_method = \"gam\",   log = NULL )"},{"path":"https://omicseye.github.io/massSight/index.html","id":"ml_match","dir":"","previous_headings":"Alignment","what":"ml_match()","title":"Batch Alignment and Scaling for LC-MS Data","text":"ml_match() function alternative method merging LC-MS experiments semi-annotated data sets.","code":"ml_match_aligned <- ml_match(   ms1,   ms2,   mz_thresh = 15,   rt_thresh = 0.5,   prob_thresh = .5,   seed = 72 )"},{"path":"https://omicseye.github.io/massSight/index.html","id":"results","dir":"","previous_headings":"","what":"Results","title":"Batch Alignment and Scaling for LC-MS Data","text":"Results alignment function stored MergedMSObject. object contains following slots: all_matched(): final matched metabolites two datasets. main result various matching functions. iso_matched(): matched isolated metabolites two datasets.","code":"all_matched(aligned) |>   head() |>   knitr::kable() iso_matched(aligned) |>   head() |>   knitr::kable()"},{"path":"https://omicseye.github.io/massSight/index.html","id":"plotting-results-from-alignment","dir":"","previous_headings":"Results","what":"Plotting results from alignment","title":"Batch Alignment and Scaling for LC-MS Data","text":"final_plots() function returns plots containing information RT MZ drift pre isolation, isolation, final matching results. plots can used diagnostic purposes.  plot can saved locally using ggsave() ggplot2 package:","code":"plots <- final_plots(aligned,   rt_lim = c(-.5, .5),   mz_lim = c(-15, 15) ) plots ggplot2::ggsave(   filename = \"plot.png\",   plot = plots )"},{"path":"https://omicseye.github.io/massSight/index.html","id":"using-masssight-to-annotate-unknown-metabolites","dir":"","previous_headings":"Results","what":"Using massSight to annotate unknown metabolites","title":"Batch Alignment and Scaling for LC-MS Data","text":", rep_Metabolite metabolite name reference dataset.","code":"merged_df <- all_matched(aligned) hp2_annotated <- merged_df |>   dplyr::select(Compound_ID_hp2, rep_Metabolite) |>   dplyr::inner_join(hp2, by = c(\"Compound_ID_hp2\" = \"Compound_ID\"))  hp2_annotated |>    dplyr::filter(rep_Metabolite != \"\") |>   dplyr::arrange(rep_Metabolite) |>   head(10) |>   knitr::kable()"},{"path":[]},{"path":"https://omicseye.github.io/massSight/index.html","id":"installation-1","dir":"","previous_headings":"Dev Instructions","what":"Installation","title":"Batch Alignment and Scaling for LC-MS Data","text":"Clone/pull massSight Open R project massSight.Rproj Build package using devtools::build() Install package using devtools::install()","code":""},{"path":"https://omicseye.github.io/massSight/reference/MSObject-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class to represent mass spectroscopy data. — MSObject-class","title":"Class to represent mass spectroscopy data. — MSObject-class","text":"Class represent mass spectroscopy data.","code":""},{"path":"https://omicseye.github.io/massSight/reference/MSObject-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class to represent mass spectroscopy data. — MSObject-class","text":"name character indicating name experiment. raw_df data frame containing raw data. isolated data frame containing isolated data. scaled_df data frame containing scaled data. consolidated logical indicating whether data consolidated. metadata data frame containing metadata.","code":""},{"path":"https://omicseye.github.io/massSight/reference/MergedMSObject-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class to represent merged mass spectroscopy data. — MergedMSObject-class","title":"Class to represent merged mass spectroscopy data. — MergedMSObject-class","text":"Class represent merged mass spectroscopy data.","code":""},{"path":"https://omicseye.github.io/massSight/reference/MergedMSObject-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class to represent merged mass spectroscopy data. — MergedMSObject-class","text":"ms1 character indicating name experiment. ms2 data frame containing raw data. all_matched data frame containing scaled data. iso_matched data frame containing scaled data. metadata logical indicating whether data consolidated. pre_iso_matched data frame containing matched pairs initial isolation scaled_values vector scaled values adjusted_df data frame containing drift corrected metabolites cutoffs vector cutoffs aligned dataframe containing final metabolite mathces smooth_method list smoothing values","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto Combine — auto_combine","title":"Auto Combine — auto_combine","text":"Combines two massSight objects, resulting single MergedMSObject.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto Combine — auto_combine","text":"","code":"auto_combine(   ms1,   ms2,   rt_lower = -0.5,   rt_upper = 0.5,   mz_lower = -15,   mz_upper = 15,   minimum_intensity = 10,   iso_method = \"manual\",   eps = 0.1,   rt_iso_threshold = 0.1,   mz_iso_threshold = 5,   match_method = \"unsupervised\",   smooth_method = \"gam\",   weights = c(1, 1, 1),   log = NULL,   output = NULL )"},{"path":"https://omicseye.github.io/massSight/reference/auto_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto Combine — auto_combine","text":"ms1 massSight object representing results preprocessed LC-MS experiment. ms2 massSight object representing results second preprocessed LC-MS experiment. rt_lower numeric indicating lower bound RT range considered aligning two metabolites. rt_upper numeric indicating upper bound RT range considered aligning two metabolites. mz_lower numeric indicating lower bound m/z range considered aligning two metabolites. mz_upper numeric indicating upper bound m/z range considered aligning two metabolites. minimum_intensity numeric indicating minimum intensity considered alignment. iso_method isolation method used modeling drift. Can either \"manual\" \"dbscan\". eps Epsilon value dbscan algorithm. used iso_method = \"dbscan\" rt_iso_threshold numeric indicating isolation parameter RT. mz_iso_threshold numeric indicating isolation parameter m/z. match_method character indicating initial matching method used detect inter-batch variability. Options \"unsupervised\" \"supervised\". smooth_method character indicating smoothing method used. Options \"lowess\", \"spline\", \"gaussian\". weights numeric vector indicating weights used alignment. log character indicating name log file. output character indicating directory save output. NULL, output saved current working directory.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto Combine — auto_combine","text":"MergedMSObject containing combined data.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto Scale — auto_scale","title":"Auto Scale — auto_scale","text":"function automatically scale data based normalization method choose. also calculate CVs sample metabolite.","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto Scale — auto_scale","text":"","code":"auto_scale(   data,   sample_information,   is_to_use = \"\",   pref_to_use = \"PREFA\",   prefs_to_remove = \"\",   normalization = c(\"IS\", \"NN\"),   pool_missing_p = 100,   fill_method = \"none\",   smooth_method = \"lowess\" )"},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto Scale — auto_scale","text":"data data frame data normalized. output read_data function. sample_information data frame sample information. output read_sample_information function. is_to_use vector internal standards use normalization. want use internal standards, leave blank. pref_to_use string preferred reference use normalization. want use preferred reference, leave blank. prefs_to_remove vector preferred references remove data. want remove preferred references, leave blank. normalization string normalization method use. can \"\", \"NN\", \"SMOOTH\". pool_missing_p numeric value indicating percentage missing pools allowed skipping normalization (0-100). fill_method string indicating fill missing values. can \"half-min\" \"none\". smooth_method string indicating smoothing method use. can \"lowess\", \"line\", \"spline\", \"gaussian\".","code":""},{"path":"https://omicseye.github.io/massSight/reference/auto_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto Scale — auto_scale","text":"data frame normalized data.","code":""},{"path":"https://omicseye.github.io/massSight/reference/cd2csv.html","id":null,"dir":"Reference","previous_headings":"","what":"CD-To-Csv — cd2csv","title":"CD-To-Csv — cd2csv","text":"Converts output Compound Discoverer csv format suitable massSight","code":""},{"path":"https://omicseye.github.io/massSight/reference/cd2csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CD-To-Csv — cd2csv","text":"","code":"cd2csv(path, gen_id = TRUE, output_file = NULL)"},{"path":"https://omicseye.github.io/massSight/reference/cd2csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CD-To-Csv — cd2csv","text":"path path Compound Discoverer Excel (.xlsx) file gen_id TRUE, function generate unique id compound based retention time mass charge ratio. output_file name file save formatted data. NULL (default), csv file written.","code":""},{"path":"https://omicseye.github.io/massSight/reference/cd2csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CD-To-Csv — cd2csv","text":"dataframe can used massSight's auto_combine() auto_scale()","code":""},{"path":"https://omicseye.github.io/massSight/reference/cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster — cluster","title":"Cluster — cluster","text":"function cluster data based clustering method choose.","code":""},{"path":"https://omicseye.github.io/massSight/reference/cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster — cluster","text":"","code":"cluster()"},{"path":"https://omicseye.github.io/massSight/reference/consolidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate — consolidate","title":"Consolidate — consolidate","text":"Consolidate adducts/isomers similar features one observation","code":""},{"path":"https://omicseye.github.io/massSight/reference/consolidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate — consolidate","text":"","code":"consolidate(   ms_obj,   use_rt = TRUE,   use_mz = TRUE,   rt_threshold = NULL,   mz_threshold = NULL )"},{"path":"https://omicseye.github.io/massSight/reference/consolidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate — consolidate","text":"ms_obj massSight object use_rt boolean retention time used identifying metabolites consolidated use_mz boolean mass charge ratio used identifying metabolites consolidated rt_threshold user defined retention time threshold defining adducts/isomers mz_threshold user defined mass charge ratio threshold defining adducts/isomers","code":""},{"path":"https://omicseye.github.io/massSight/reference/consolidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate — consolidate","text":"massSight object consolidated metabolites","code":""},{"path":"https://omicseye.github.io/massSight/reference/create_ms_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Create MS Object — create_ms_obj","title":"Create MS Object — create_ms_obj","text":"Create MSObject data frame.","code":""},{"path":"https://omicseye.github.io/massSight/reference/create_ms_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create MS Object — create_ms_obj","text":"","code":"create_ms_obj(   df,   name,   id_name = \"Compound_ID\",   rt_name = \"RT\",   mz_name = \"MZ\",   int_name = \"Intensity\",   metab_name = \"Metabolite\" )"},{"path":"https://omicseye.github.io/massSight/reference/create_ms_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create MS Object — create_ms_obj","text":"df data frame containing raw data. name character indicating name experiment. id_name character indicating name column containing compound IDs. rt_name character indicating name column containing retention times. mz_name character indicating name column containing m/z values. int_name character indicating name column containing intensities metab_name optional character indicating name column containing metabolite annotations","code":""},{"path":"https://omicseye.github.io/massSight/reference/create_ms_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create MS Object — create_ms_obj","text":"MSObject.","code":""},{"path":"https://omicseye.github.io/massSight/reference/distribution_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Plot — distribution_plot","title":"Distribution Plot — distribution_plot","text":"Plot distributions retention times mass charge ratios individual MS experiments","code":""},{"path":"https://omicseye.github.io/massSight/reference/distribution_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Plot — distribution_plot","text":"","code":"distribution_plot(ms_obj, subset = \"all\")"},{"path":"https://omicseye.github.io/massSight/reference/distribution_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Plot — distribution_plot","text":"ms_obj Either MSObject, MergedMSObject subset Whether plot metabolites isolated metabolites. Can either \"\" \"isolated\"","code":""},{"path":"https://omicseye.github.io/massSight/reference/distribution_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution Plot — distribution_plot","text":"scatter plot retention times vs mass charge ratios marginal histograms","code":""},{"path":"https://omicseye.github.io/massSight/reference/filter_intensities.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Intensities — filter_intensities","title":"Filter Intensities — filter_intensities","text":"Filter Intensities","code":""},{"path":"https://omicseye.github.io/massSight/reference/filter_intensities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Intensities — filter_intensities","text":"","code":"filter_intensities(data, prevalence = 0.5)"},{"path":"https://omicseye.github.io/massSight/reference/filter_intensities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Intensities — filter_intensities","text":"data Dataframe containing results LC-MS experiment. prevalence Percent samples required keep metabolite.","code":""},{"path":"https://omicseye.github.io/massSight/reference/filter_intensities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Intensities — filter_intensities","text":"logical vector indicating rows original dataset retained","code":""},{"path":"https://omicseye.github.io/massSight/reference/final_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Final Plots — final_plots","title":"Final Plots — final_plots","text":"Final Plots","code":""},{"path":"https://omicseye.github.io/massSight/reference/final_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final Plots — final_plots","text":"","code":"final_plots(merged_ms_obj, rt_lim = c(-0.5, 0.5), mz_lim = c(-15, 15))"},{"path":"https://omicseye.github.io/massSight/reference/final_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Final Plots — final_plots","text":"merged_ms_obj Merged MS Object, typically result auto_combine rt_lim RT bounds mz_lim MZ bounds","code":""},{"path":"https://omicseye.github.io/massSight/reference/final_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Final Plots — final_plots","text":"cowplot grid plots","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Data — load_data","title":"Load Data — load_data","text":"function load LC-MS data file.","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Data — load_data","text":"","code":"load_data(input, type = \"known\", sheet = 1, id = \"Metabolite\")"},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Data — load_data","text":"input string file path data frame data loaded. type string indicating type data loaded. can \"known\" \"unknown\". sheet string integer indicating sheet number excel file loaded. id string indicating column name compound ID.","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Data — load_data","text":"list sample metadata, feature metadata, data matrix.","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_ihmp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load iHMP Data — load_ihmp_data","title":"Load iHMP Data — load_ihmp_data","text":"Load iHMP Data","code":""},{"path":"https://omicseye.github.io/massSight/reference/load_ihmp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load iHMP Data — load_ihmp_data","text":"","code":"load_ihmp_data(path = \"data/\")"},{"path":"https://omicseye.github.io/massSight/reference/massSight-package.html","id":null,"dir":"Reference","previous_headings":"","what":"massSight: Batch Alignment and Scaling for LC-MS Data — massSight-package","title":"massSight: Batch Alignment and Scaling for LC-MS Data — massSight-package","text":"`R` package alignment, scaling, downstream analysis LC-MS metabolomics data.","code":""},{"path":[]},{"path":"https://omicseye.github.io/massSight/reference/massSight-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"massSight: Batch Alignment and Scaling for LC-MS Data — massSight-package","text":"Maintainer: Chiraag Gohel chiraaggohel@gwu.edu (ORCID) Authors: Bahar Sayoldin sayoldin@gwu.edu (ORCID) Ali Rahnavard rahnavard@gwu.edu (ORCID)","code":""},{"path":"https://omicseye.github.io/massSight/reference/ml_match.html","id":null,"dir":"Reference","previous_headings":"","what":"ML Match — ml_match","title":"ML Match — ml_match","text":"Trains, fits, uses machine learning model known metabolite data predict unknown metabolite pair matches.","code":""},{"path":"https://omicseye.github.io/massSight/reference/ml_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ML Match — ml_match","text":"","code":"ml_match(ms1, ms2, mz_thresh = 15, rt_thresh = 1, prob_thresh = 0.5, seed = 72)"},{"path":"https://omicseye.github.io/massSight/reference/ml_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ML Match — ml_match","text":"ms1 massSight object representing results preprocessed LC-MS experiment ms2 massSight object representing results second preprcoessed LC-MS experiment mz_thresh numeric Mass Charge threshold. Used limit potential matches metabolites. rt_thresh numeric Retention Time threshold. Used limit potential matches metabolites seed Seed value reproducibility","code":""},{"path":"https://omicseye.github.io/massSight/reference/ml_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ML Match — ml_match","text":"dataframe consisting predicted metabolite pairs","code":""},{"path":"https://omicseye.github.io/massSight/reference/ml_match.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ML Match — ml_match","text":"function requires semi-annotated data (metabolites must named)","code":""},{"path":"https://omicseye.github.io/massSight/reference/ml_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ML Match — ml_match","text":"","code":"if (FALSE) { # \\dontrun{ ml_match(ms1, ms2, mz_thresh = 15, rt_thresh = .5, seed = 2) } # }"},{"path":"https://omicseye.github.io/massSight/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://omicseye.github.io/massSight/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://omicseye.github.io/massSight/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://omicseye.github.io/massSight/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://omicseye.github.io/massSight/news/index.html","id":"masssight-023","dir":"Changelog","previous_headings":"","what":"massSight 0.2.3","title":"massSight 0.2.3","text":"Added vignettes","code":""},{"path":"https://omicseye.github.io/massSight/news/index.html","id":"masssight-022","dir":"Changelog","previous_headings":"","what":"massSight 0.2.2","title":"massSight 0.2.2","text":"Working auto_scale() function scaling metabolite features Fixed logging feature auto_combine()","code":""},{"path":"https://omicseye.github.io/massSight/news/index.html","id":"masssight-021","dir":"Changelog","previous_headings":"","what":"massSight 0.2.1","title":"massSight 0.2.1","text":"Fixed bug final_plots() prevented display matched metabolites Removed pre-isolation matching auto_combine()","code":""},{"path":"https://omicseye.github.io/massSight/news/index.html","id":"masssight-020","dir":"Changelog","previous_headings":"","what":"massSight 0.2.0","title":"massSight 0.2.0","text":"Added robust plotting features auto_combine() output can now used input future auto_combine() calls Ported get_vectors() C++","code":""},{"path":"https://omicseye.github.io/massSight/news/index.html","id":"masssight-010","dir":"Changelog","previous_headings":"","what":"massSight 0.1.0","title":"massSight 0.1.0","text":"Initial GitHub release","code":""}]

// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findClosestMatch
int findClosestMatch(NumericVector query, DataFrame ref, NumericVector stds);
RcppExport SEXP _massSight_findClosestMatch(SEXP querySEXP, SEXP refSEXP, SEXP stdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type query(querySEXP);
    Rcpp::traits::input_parameter< DataFrame >::type ref(refSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stds(stdsSEXP);
    rcpp_result_gen = Rcpp::wrap(findClosestMatch(query, ref, stds));
    return rcpp_result_gen;
END_RCPP
}
// getVectors
CharacterVector getVectors(DataFrame df, double rt_sim, double mz_sim);
RcppExport SEXP _massSight_getVectors(SEXP dfSEXP, SEXP rt_simSEXP, SEXP mz_simSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type rt_sim(rt_simSEXP);
    Rcpp::traits::input_parameter< double >::type mz_sim(mz_simSEXP);
    rcpp_result_gen = Rcpp::wrap(getVectors(df, rt_sim, mz_sim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_massSight_findClosestMatch", (DL_FUNC) &_massSight_findClosestMatch, 3},
    {"_massSight_getVectors", (DL_FUNC) &_massSight_getVectors, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_massSight(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
